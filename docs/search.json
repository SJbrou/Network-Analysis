[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Supply Chain Data Analytics",
    "section": "",
    "text": "Home\nThese are my resources for the Network Analysis course. I like ordering these so I can order my thoughts. Hopefully you’ll find in them as well\nThe site is hosted on github pages and written and build using Rstudio and Quarto. You can always reach out to me if you want to chat about hosting your own sites on github. I’m available.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "assignment2.html",
    "href": "assignment2.html",
    "title": "Assignment week 2",
    "section": "",
    "text": "Question 1.\nClustering Coefficient of B: - Direct neighbors of B: A, C, E, F, & G → ( n = 5 ) - Potential links: ( ) → ( = 10 ) potential links - Existing links between neighbors: A-C, A-E, E-F, F-G (4 links) - Clustering coefficient of B: ( = 0.4 )\nClustering Coefficient of G: - Direct neighbors of G: A, D, & F → ( n = 3 ) - Potential links: ( ) → ( = 3 ) potential links - Existing link between neighbors: B-F (1 link) - Clustering coefficient of G: ( )",
    "crumbs": [
      "Assignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignment2.html#section",
    "href": "assignment2.html#section",
    "title": "Assignment week 2",
    "section": "1.1",
    "text": "1.1\nVisualize the time series for the entire duration\n\n# Load the data",
    "crumbs": [
      "Assignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignment2.html#section-1",
    "href": "assignment2.html#section-1",
    "title": "Assignment week 2",
    "section": "3",
    "text": "3\na. Table:\n\n\n\n\nProduct A\nProduct B\nNot enter\n\n\nProduct A\n-10M, -10M\n10M, 10M\n15M, 0\n\n\nProduct B\n10M, 10M\n5M, 5M\n15M, 0\n\n\nNot enter\n0, 15M\n0, 15M\n0,0\n\n\n\nB. One of your employees argues that you should enter the market (although he is not sure\nwhat product you should produce) because no matter what firm 2 does, entering and\nproducing product B is better than not entering. Evaluate this argument.\nObviously making any profit can be valued over making no profit. Thus producing product B &gt; not entering the market\nC. Another employee agrees with the person in part (b) and argues that as strategy A could\nresult in a loss (if the other firm also produces A) you should enter and produce B. If both\nfirms reason this way, and thus enter and produce product B, will their play of the game\nform a Nash equilibrium? Explain.\nThis is NOT a Nash equilibrium as each firm has a better alternative: they can increase profits by switching to product A if they know the other is producing the other product.\nD. find all the pure strategy Nash equilibria of this game (Product A, Product B) or (Product B, Product A)\nBefore starting the exercises, lets clear the workspace and load dependencies.\n\n# Clear workspace\nrm(list = ls())\n\n\n# This is a complex way of loading al required packages. simply calling:\n# library(readxl) should suffice.\n\n# Load dependencies\ninstall_and_load &lt;- function(packages) {\n  installed_packages &lt;- rownames(installed.packages())                                # Check installed packages\n  to_install &lt;- packages[!(packages %in% installed_packages)]\n  if (length(to_install) &gt; 0) {                                                       # Install missing\n    install.packages(to_install, dependencies = TRUE)\n  }\n  suppressMessages(lapply(packages, require, character.only = TRUE, quietly = TRUE))  # Load\n}\ninstall_and_load(c(\"tidyverse\", \"readxl\", \"ggplot2\", \"plotly\"))",
    "crumbs": [
      "Assignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignment2.html#section-2",
    "href": "assignment2.html#section-2",
    "title": "Assignment week 2",
    "section": "1.1",
    "text": "1.1\nVisualize the time series for the entire duration\n\n# Load the data",
    "crumbs": [
      "Assignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignment2.html#assignment-1.",
    "href": "assignment2.html#assignment-1.",
    "title": "Assignment week 2",
    "section": "",
    "text": "Clustering Coefficient of B:\n\nDirect neighbors of B: A, C, E, F, & G → ( n = 5 )\nPotential links: ( ) → ( = 10 ) potential links\nExisting links between neighbors: A-C, A-E, E-F, F-G (4 links)\nClustering coefficient of B: ( = 0.4 )\n\n\n\nClustering Coefficient of G:\n\nDirect neighbors of G: A, D, & F → ( n = 3 )\nPotential links: ( ) → ( = 3 ) potential links\nExisting link between neighbors: B-F (1 link)\nClustering coefficient of G: ( )",
    "crumbs": [
      "Assignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignment2.html#question-2",
    "href": "assignment2.html#question-2",
    "title": "Assignment week 2",
    "section": "Question 2",
    "text": "Question 2\nAssuming higher values correspond to higher payoffs there is one dominant theory for all players, and thus 1 equilibrium.\n\n\n\n1,4\n6,5\n\n\n3,3\n4,2",
    "crumbs": [
      "Assignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignment2.html#question-3",
    "href": "assignment2.html#question-3",
    "title": "Assignment week 2",
    "section": "Question 3",
    "text": "Question 3\na. Table:\n\n\n\n\nProduct A\nProduct B\nNot enter\n\n\nProduct A\n-10M, -10M\n10M, 10M\n15M, 0\n\n\nProduct B\n10M, 10M\n5M, 5M\n15M, 0\n\n\nNot enter\n0, 15M\n0, 15M\n0,0\n\n\n\nB. One of your employees argues that you should enter the market (although he is not sure\nwhat product you should produce) because no matter what firm 2 does, entering and\nproducing product B is better than not entering. Evaluate this argument.\nObviously making any profit can be valued over making no profit. Thus producing product B &gt; not entering the market\nC. Another employee agrees with the person in part (b) and argues that as strategy A could\nresult in a loss (if the other firm also produces A) you should enter and produce B. If both\nfirms reason this way, and thus enter and produce product B, will their play of the game\nform a Nash equilibrium? Explain.\nThis is NOT a Nash equilibrium as each firm has a better alternative: they can increase profits by switching to product A if they know the other is producing the other product.\nD. find all the pure strategy Nash equilibria of this game\n(Product A, Product B) or (Product B, Product A)\nE. Another employee of your firm suggests merging the two firms and deciding co-operatively\non strategies so as to maximize the sum of profits. Ignoring whether this merger would\nbe allowed by the regulators do you think its a good idea? Explain.\n\nNo. In a merger the maximal profit would be 20M. Assume one firm starts producing product A, the optimal strategy for the other firm is to produce the other product, in which case the total profits of the firms combined would also be 20M. As it is in both firms intrests to follow the cooperative strategy, there is no incentive to merge.",
    "crumbs": [
      "Assignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignment2.html#question-4",
    "href": "assignment2.html#question-4",
    "title": "Assignment week 2",
    "section": "Question 4",
    "text": "Question 4\nBefore starting the exercises, lets clear the workspace and load dependencies.\n\n\nCode\n# Clear workspace\nrm(list = ls())\n\n\n# This is a complex way of loading al required packages. simply calling:\n# library(readxl) should suffice.\n\n# Load dependencies\ninstall_and_load &lt;- function(packages) {\n  installed_packages &lt;- rownames(installed.packages())                                # Check installed packages\n  to_install &lt;- packages[!(packages %in% installed_packages)]\n  if (length(to_install) &gt; 0) {                                                       # Install missing\n    install.packages(to_install, dependencies = TRUE)\n  }\n  suppressMessages(lapply(packages, require, character.only = TRUE, quietly = TRUE))  # Load\n}\ninstall_and_load(c(\"tidyverse\", \"readxl\", \"ggplot2\", \"plotly\", \"dplyr\", \"lubridate\", \"readr\", \"igraph\", \"visNetwork\", \"threejs\", \"igraphdata\", \"networkD3\"))\n\n\nWarning: package 'igraph' was built under R version 4.3.3\n\n\n\n\nCode\n# Read in Data\n\ndata(\"USairports\")\n\n# Now simply data and remove self loops (they make for horrible plots)\n\ng &lt;- simplify(USairports, remove.loops = TRUE, remove.multiple = TRUE)\n\n# Now you are good to go to work with the graph \"g\"\n\n# a: Plot the data\npdf(\"Data_plot_g.pdf\", width = 20, height = 20)\nplot(g,\n     vertex.label = NA,\n     vertex.color = \"red\",\n     vertex.frame.color = \"black\",\n     vertex.label.cex = 0.5,\n     vertex.size =  1.5,\n     vertex.shape = \"circle\",\n     edge.color = 'pink',\n     edge.width = 0.5,\n     edge.arrow.width = 0.01,\n     edge.arrow.size = 0.05,\n     layout = layout_nicely(g),\n     main = \"Data Plot of US Airport Network\")\ndev.off()\n\n# b: What is the mean distance of this network?\ng.apl &lt;- mean_distance(g, directed = TRUE)\ng.apl #3.52743\n\n# Generating 1000 random graphs\ngl &lt;- vector('list', 1000)\nfor(i in 1:1000) {\n  gl[[i]] &lt;- erdos.renyi.game(n = gorder(g),\n                              p.or.m = edge_density(g),\n                              type = \"gnp\")\n}\n\n# Calculating average path length of 1000 random graps\ngl.apls &lt;- unlist(lapply(gl, mean_distance, directed = FALSE))\n\nhist(gl.apls, breaks = 10, xlim = range(c(2.5, 4)))\nabline(v = mean_distance(g, directed = FALSE),\n       col = \"red\",\n       lty = 3,\n       lwd = 2)\n\n\n\n\n\n\n\n\n\nCode\n# c: Calculate the betweenness measure for each node\ng.b &lt;- betweenness(g)\npdf('Betweenness.g.pdf', width = 10, height = 10)\nplot(g,\n     vertex.color = \"red\",\n     vertex.frame.color = \"black\",\n     vertex.label.cex = 0.5,\n     vertex.size = (sqrt(g.b)+1)/50,\n     vertex.shape = \"circle\",\n     edge.color = \"pink\",\n     edge.width = 0.5,\n     edge.arrow.width = 0.01,\n     edge.arrow.size = 0.05,\n     layout=layout_nicely(g))\ndev.off()\n\ng.b &lt;- betweenness(g)\nmax_betweenness &lt;- max(g.b)\nlargest_betweenness_node &lt;- which(g.b == max_betweenness)\nprint(max_betweenness)\n#[1] 203156.7\nprint(largest_betweenness_node)\n# ANC\n\n# d: Calculate the out-degree for each node. What is the largest one?\nout_degree_values &lt;- degree(g, mode = \"out\")\n\n# Find the node with the maximum out-degree\nmax_out_degree &lt;- max(out_degree_values)\nmax_out_degree_node &lt;- which(out_degree_values == max_out_degree)\n\nmax_out_degree #163\nmax_out_degree_node #ATL 148\n\n# Scale out-degree values for visualization (apply log transformation for better size scaling)\nvertex_sizes_out_degree &lt;- log(out_degree_values + 1) * 3.5  \n\n# Plot the graph with vertex size based on out-degree\npdf(\"Out_degree.pdf\", width = 10, height = 10)\nplot(g, \n     vertex.color = \"pink\",\n     vertex.frame.color = \"black\",\n     vertex.size = vertex_sizes_out_degree,\n     vertex.label.cex = 0.5,\n     vertex.size = 0.5,\n     vertex.shape = \"circle\",\n     edge.color = \"skyblue\",\n     edge.width = 0.5,\n     edge.arrow.width = 0.01,\n     edge.arrow.size = 0.05,\n     layout=layout_nicely(g),\n     main = \"US Airports Network with Vertex Size Based on Out-Degree\"\n)\ndev.off()",
    "crumbs": [
      "Assignments",
      "Assignment 2"
    ]
  }
]